{% extends 'PlanningViews/planningUserView-Index.html.twig' %}
{% block title %}Programmation des plannings{% endblock %}
{% block titreTableau %}
    <div class="row">
        <div>
            <h1>Programmation Des Plannings</h1>
        </div>
        <div class="col-2 mt-2 ml-1">
            <!-- Plannings Table btn -->
            <a href="/planningsUser-Table" type="button" class="btn btn-block btn-primary" style="width: 41px">
                <i class="fa fa-table"></i></a>
        </div>
    </div>
{% endblock %}
{% block componentAffichagePlanning %}
    <div class="row">
        <div class="col-md-12">
            <div class="card card-primary">
                <div class="card-body p-0">
                    <!-- THE CALENDAR -->
                    <div id="calendar"></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>

    <!-- Modal -->
    <div class="modal fade" id="eventDetailModal" tabindex="-1" role="dialog" aria-labelledby="eventDetailModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <!-- Widget: user widget style 1 -->
                    <div class="card card-widget widget-user shadow-lg mb-0">
                        <!-- Add the bg color to the header using any of the bg-* classes -->
                        <div class="widget-user-header text-white" id="eventImageBackground">
                            <h3 class="widget-user-username text-right" id="eventTitle">Made In Tunisia</h3>
                            <h5 class="widget-user-desc text-right" id="eventType">Spectacle</h5>
                            <h6 class="widget-user-desc text-right" id="eventGenre">Danse</h6>
                        </div>

                        <div class="card-body pb-0">
                            <div class="row">
                                <div class="col-sm-3 border-right">
                                    <div class="description-block">
                                        <h5 class="description-header mb-1"><i class="fa fa-map-marker-alt fa-lg"></i>
                                        </h5>
                                        <span class="description-text" id="eventSalle">Salle colisé</span>
                                    </div>
                                    <!-- /.description-block -->
                                </div>
                                <!-- /.col -->
                                <div class="col-sm-3 border-right">
                                    <div class="description-block">
                                        <h5 class="description-header  mb-1"><i class="fa fa-calendar-check fa-lg"></i>
                                        </h5>
                                        <span class="description-text" id="eventDate">20/05/2021</span>
                                    </div>
                                    <!-- /.description-block -->
                                </div>
                                <!-- /.col -->
                                <div class="col-sm-3 border-right">
                                    <div class="description-block">
                                        <h5 class="description-header mb-1"><i class="fa fa-hourglass-start fa-lg"></i>
                                        </h5>
                                        <span class="description-text" id="eventStartHeure">20:20:00</span>
                                    </div>
                                    <!-- /.description-block -->
                                </div>
                                <!-- /.col -->
                                <div class="col-sm-3">
                                    <div class="description-block">
                                        <h5 class="description-header  mb-1"><i class="fa fa-hourglass-end fa-lg"></i>
                                        </h5>
                                        <span class="description-text" id="eventEndHeure">22:00:00</span>
                                    </div>
                                    <!-- /.description-block -->
                                </div>
                                <!-- /.col -->
                            </div>
                            <div class="row pt-3 pb-3 float-right">
                                <a href="#" class="btn btn-warning mr-1"><i class="fa fa-shopping-basket mr-2"></i>Réserver</a>
                            </div>
                            <!-- /.row -->
                        </div>
                    </div>
                    <!-- /.widget-user -->
                </div>

            </div>
        </div>
    </div>


    <script>
        function Planning(id, typeEvent, titreEvent, date, heureDebut, heureFin, nomSalle) {
            this.id = id;
            this.typeEvent = typeEvent
            this.titreEvent = titreEvent;
            this.date = date;
            this.heureDebut = heureDebut;
            this.heureFin = heureFin;
            this.nomSalle = nomSalle;
        }

        function Event(id, title, start, end, color) {
            this.id = id;
            this.title = title;
            this.start = start;
            this.end = end;
            this.allDay = false;
            this.backgroundColor = color;
            this.borderColor = color;
        }

        let plannings = [];
        let events = [];
        let dteStr, dte, hDebStr, hDeb, hFinStr, hFin;
        let color;
        {% for pln in plannings %}
        dteStr = "{{ pln.yearOfDate }}" + "-" + "{{ pln.monthOfDate }}" + "-" + "{{ pln.dayOfDate }}";
        dte = new Date(dteStr);
        hDebStr = dteStr + "T" + "{{ pln.heureDebut|date('H:i:s') }}"
        hFinStr = dteStr + "T" + "{{ pln.heureFin|date('H:i:s') }}"
        hDeb = new Date(hDebStr);
        hFin = new Date(hFinStr);
        plannings.push(new Planning({{ pln.id }}, "{{ pln.typeEvent }}", "{{ pln.titreEvent }}", dte,
            hDeb, hFin, "{{ pln.nomSalle }}"));
        {% if pln.typeEvent == "Spectacle" %}
        color = '#0073b7'; //blue
        {% elseif pln.typeEvent == "Film" %}
        color = '#00a65a'; //green
        {% endif %}
        events.push(new Event(1, "{{ pln.titreEvent }}", hDeb, hFin, color));
        {% endfor %}

        console.log(plannings);
        console.log(events);


        $(function () {
            /* initialize the calendar
             -----------------------------------------------------------------*/
            //Date for the calendar events (dummy data)
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear()

            var Calendar = FullCalendar.Calendar;
            var calendarEl = document.getElementById('calendar');

            var calendar = new Calendar(calendarEl, {
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                // contentHeight: '445px', // Page fit
                contentHeight: '550px', //zoom In
                themeSystem: 'bootstrap',
                //Random default events
                events: events,
                editable: false,
                droppable: false, // this allows things to be dropped onto the calendar !!!
                drop: function (info) {
                    // is the "remove after drop" checkbox checked?
                    if (checkbox.checked) {
                        // if so, remove the element from the "Draggable Events" list
                        info.draggedEl.parentNode.removeChild(info.draggedEl);
                    }
                }
            });
            calendar.render();


            function openModal(modalId) {
                $("#" + modalId).modal({show: true});
            }


            let listEventGrid = document.getElementsByClassName("eventGrid");
            var eventGrid, listChildresn, typeE, nomE, startHeuE;
            for (let i = 0; i < listEventGrid.length; i++) {
                eventGrid = listEventGrid.item(i);
                eventGrid.addEventListener('click', (e) => {
                    listChildresn = e.target.childNodes;

                    typeE = getTypeE(listChildresn[0].style.borderColor);
                    startHeuE = convertStartH(listChildresn[1].innerHTML)[0];
                    nomE = listChildresn[2].innerHTML;
                    var myPln;

                    // TODO: 1- call a function in the film repositoty which return the film which it's title is "nomE"
                    // TODO: 2- parcourir list des plannings et tuver planning qui a comme titre event "nomE" et heureDeb "startHeuE"
                    $.ajax({
                        type: "GET",
                        url: "{{ path('getEventByTitle') }}",
                        data: {
                            titre: nomE,
                            type: typeE
                        },
                        success: function (data) {
                            console.log(data);
                            console.log(startHeuE, nomE);
                            console.log(myPln);
                            plannings.forEach((pln) => {
                                var titreE = pln.titreEvent;
                                let condNomE = titreE === nomE;
                                let condStartH = pln.heureDebut.getHours() === startHeuE.getHours()
                                    && pln.heureDebut.getMinutes() === startHeuE.getMinutes();
                                if (condNomE && condStartH) {
                                    myPln = pln;
                                }
                            });
                            console.log(myPln);
                            document.getElementById("eventTitle").innerHTML = nomE;
                            document.getElementById("eventType").innerHTML = typeE;
                            document.getElementById("eventGenre").innerHTML = data.genre;
                            document.getElementById("eventSalle").innerHTML = `Salle ${myPln.nomSalle}`;
                            document.getElementById("eventDate").innerHTML = new Intl.DateTimeFormat(['ban', 'id']).format(myPln.date);
                            document.getElementById("eventStartHeure").innerHTML = getTimeHH_MM_SS(myPln.heureDebut);
                            document.getElementById("eventEndHeure").innerHTML = getTimeHH_MM_SS(myPln.heureFin);
                            if (typeE === "Film") {
                                document.getElementById("eventImageBackground").style.cssText = "background: url('../dist/img/Data/" + data.img + "') center center;";
                            } else if (typeE === "Spectacle") {
                                document.getElementById("eventImageBackground").style.cssText = "background: url('../dist/img/Data/" + data.img + "') center center;";
                            }


                            openModal("eventDetailModal");
                        }
                    });
                });
            }

            function addNotClickableOption(eletClass) {
                let listElets = document.getElementsByClassName(eletClass);
                // console.log(listEventGrid);

                let elet;
                for (let i = 0; i < listElets.length; i++) {
                    // console.log(listEventGrid.item(i));
                    elet = listElets.item(i);
                    elet.style.cssText += 'pointer-events: none;';
                }
            }

            addNotClickableOption("fc-daygrid-event-dot");
            addNotClickableOption("fc-event-time");
            addNotClickableOption("fc-event-title");

            function convertStartH(startH) {
                let startHeuLength = startH.length;
                // let sHeureStr = startH.substring(0, startHeuLength - 1);
                switch (startHeuLength) {
                    case 6:
                        sHeureHhStr = startH.substring(0, 2);
                        sHeureMmStr = startH.substring(3, 5);
                        break;
                    case 5:
                        sHeureHhStr = startH[0];
                        sHeureMmStr = startH.substring(2, 4);
                        break;
                    case 3:
                        sHeureHhStr = startH.substring(0, 2);
                        sHeureMmStr = "0";
                        break;
                    case 2:
                        sHeureHhStr = startH[0];
                        sHeureMmStr = "0";
                        break;
                }
                let sHeureUnitStr = startH.substring(startHeuLength - 1, startHeuLength);

                let sHeure = new Date();
                sHeure.setHours(sHeureUnitStr === "a" ? parseInt(sHeureHhStr) : parseInt(sHeureHhStr) + 12)
                sHeure.setMinutes(parseInt(sHeureMmStr));
                sHeure.setSeconds(0);

                let sHeureStr = `${sHeure.getHours()}:${sHeure.getMinutes()}:${sHeure.getSeconds()}`

                return [sHeure, sHeureStr];
            }

            function getTypeE(color) {
                return color === "rgb(0, 115, 183)" ? "Spectacle" : "Film";
            }

            function getTimeHH_MM_SS(heure) {
                var h = heure.getHours();
                var m = heure.getMinutes();
                var s = heure.getSeconds();
                // add a zero in front of numbers<10
                h = h < 10 ? "0" + h : h;
                m = m < 10 ? "0" + m : m;
                s = s < 10 ? "0" + s : s;
                return h + ":" + m + ":" + s;
            }


        })


    </script>






{% endblock %}